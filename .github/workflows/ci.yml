name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
        options: >-
          --health-cmd "curl -f http://localhost:6333/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -r tests/requirements.txt
        uv pip install -r services/storage/requirements.txt
        uv pip install -r services/retriever/requirements.txt
    
    - name: Run storage service tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        source .venv/bin/activate
        python -m pytest tests/test_file_processor.py tests/test_embedding_service.py -v
    
    - name: Run integration tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        source .venv/bin/activate
        python -m pytest tests/test_storage_integration.py -v
    
    - name: Lint code
      run: |
        source .venv/bin/activate
        uv pip install ruff
        ruff check .
    
    - name: Type check
      run: |
        source .venv/bin/activate
        uv pip install mypy
        mypy --ignore-missing-imports services/ shared/

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker images
      run: |
        docker build -f services/storage/Dockerfile -t rag-storage .
        docker build -f services/retriever/Dockerfile -t rag-retriever .
        docker build -f services/query_enhancement/Dockerfile -t rag-query-enhancement .
        docker build -f services/generation/Dockerfile -t rag-generation .
        docker build -f services/gateway/Dockerfile -t rag-gateway .